quit
@caca
quit
dispo_a_changer.first
dispo_a_changer.second
dispo_a_changer
dispo_a_changer.id
choix
creneau_min
dispo_a_changer
quit
test1
quit
tab_min
min
tableau_restant
next
tableau_restant
tableau_restant.min.first
tableau_restant.min
tableau_restant
@dispos_actives
listeParticipants
next
ki
quit
ki
listeParticipants
tableau_restant
tablea_restant
quit
creneautosue
creneautouse
k
j
ki
quit
j
i
ki
k
next
i
k
j
ki
creneautosue
quit
ki
k
i
next
creneautosue
next
newt
next
j
ki
k
i
creneautosue
creneautouse
quit
Creneau.find(dispo_avec_count_mini.second)
dispo_avec_count_mini
dipo_avec_count_mini
quit
disponibilite
quit
disponibilite
disponibilite.all
disponibilite
quit
disponibilite
quit
@dispo_choisie
disponibilite
quit
uit
@dispo_choisie
@dispo_choisi
quit
creneaux_dispo
creneaux_non_dispo
pDispos
Disponibilite.where(participant: participant)
Disponibilite.where(participant: participant).first
Disponibilite.where(participant: 41)
Disponibilite.where(particpant: 41).first
Disponibilite.where(particpant: 41)
Disponibilite.where(particpant: participant.id)
Disponibilite.where(particpant: participant.id).first
Disponibilite.where(id_particpant: participant.id).first
participant.id
Disponibilite.where(particpant_id: participant.id).first
Disponibilite.where(particpant: participant).first
Disponibilite.where(particpant: participant)
participant
@dispo_choisie
quit
Disponibilite.all
participant
Disponibilite.where(id_participant: participant.id).first
Disponibilite.where(id_participant: participant.id)
Disponibilite.where(id_participant: participant.id).first
Disponibilite.where(id_participant: participan.id).first
Disponibilite.where(id_participant: participan.idt).first
Disponibilite.where(participant: participant).first
Disponibilite.where({participant: participant}).first
Disponibilite.where({participant: participant})
participant
creneaux_dispo
creneaux_non_dispo
@dispo_choisie
quit
max_creneau
needCreneau
bool
params
nparams
quit
yyy
quit
jur
plural
c
plur
quit
tableau
quit
tableau
tableau.push(p.participant)
Disponibilite.where({participant_id: p.participant.id, active: 0}).count
Disponibilite.where({participant_id: p.participant.id, active: 1})
Disponibilite.where({participant_id: p.participant.id, active: 0})
p = @disposCreneau.first
p.participant
(Disponibilite.where(participant: p.participant, active: 0)).id
(Disponibilite.where(participant: p.participant, active: 0))
(Disponibilite.all.where(participant: p.participant, active: 0))
(Disponibilite.all.where(participant_id: p.participant.id, active: 0))
(Disponibilite.where(participant_id: p.participant.id, active: 0))
p.participant.id
p.participant
(Disponibilite.where({participant_id: p.participant.id, active: 0})
p
p = @disposCreneau.first
p
(Disponibilite.where({participant_id: p.participant.id, active: 0})
Event.last.Nombre_de_Creneaux_par_Participant
tableau
@disposCreneau
tableau
c
a
b
Disponibilite.where({active: 0})
Disponibilite.where({active: = 0})
Disponibilite.all
a
b
quit
a
quit
Meilleur_choix(b)
c
(Disponibilite.where({participant_id: c.id, creneau_id: find_min_creneau().id}).active)
quit
Disponibilite.where({participant_id: t.id,active: 0}).count < base
Disponibilite.where({participant_id: t.id,active: 0}).count
Disponibilite.where({participant_id: t.id,active: 0})
Disponibilite.wher({participant_id: t.id,active: 0})
t.id
quit
Disponibilite.all.where({participant_id: Participant.find(17).id,active : 0})
Disponibilite.all.where({participant_id: Participant.find(17).id}).count< 4
Disponibilite.all.where({participant_id: Participant.find(17).id}).count
Disponibilite.all.where({participant_id: Participant.find(17).id})
Disponibilite.all.where({participant_id: Participant.find(17).id)
Disponibilite.all
quit
event_params[:creneaus_attributes].first[:date_debut]
event_params[:creneaus_attributes].first
event_params[:creneaus_attributes]
event_params
quit
event_params[:creneaus_attributes] == nil
event_params[:creneaus_attributes]
quit
@¢ren.update(disponibilite_params)
@cren.update
@cren
@cren.update
disponibilite_params
@cren
@¢ren.update()
@¢ren.update(disponibilite_params)
@cren.update
@cren
quit
Event.last
creneaux_dispo
creneaux_non_dispo
quit
@dispo
nparams
naprams
params
@dispo.save
Disponibilite.all
nparams
Disponibilite.all
@dispo
@dispo.save
@dispo
Disponibilite.all
Disponibilite.al
@dispo.save
@dispo
nparams
quit
nparams.first.second.first.first
nparams.first.second.first
nparams.first.second
nparams.first.first
nparams.first
nprams.first
naprams.first
nparams
quit
nparams
quit
nparams
quit
nparams
quit
nparams.first.first
nparams.first
nparams
quit
nparams
quit
nparams
quit
yo.except(:utf8)
yo
quit
params
disponibilite_params
quit
params
quit
params2
quit
params
quit
